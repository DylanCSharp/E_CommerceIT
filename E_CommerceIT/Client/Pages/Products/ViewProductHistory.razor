@page "/userprofile/{userid}"

@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider

@if (isCustomer)
{
    <div class="container-fluid">
        <table class="table table-responsive">
            <thead>
                <tr>
                    <td>Order Number:</td>
                    <td>Product Name:</td>
                    <td>Product Image:</td>
                    <td>Category:</td>
                    <td>Ordered in Month</td>
                    <td>Year:</td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                <Virtualize Context="items" Items="@orders">
                    <tr>
                        <td>@items.OrderNum</td>
                        <td>@items.ProductName</td>
                        <td><img class="img-thumbnail" style="max-height: 15vh;" src="@items.ProductImage" /></td>
                        <td>@items.CategoryType</td>
                        <td>@items.Month</td>
                        <td>@items.OrderYear</td>
                    </tr>
                </Virtualize>
            </tbody>
        </table>
    </div>
}
else
{
    <h5>Sorry, you do not have access to this page.</h5>
}


@code {

    [Parameter]
    public string UserId { get; set; }
    public bool isCustomer { get; set; }
    List<CustomOrderHistory> orders = new();

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var authUser = authState.User;
        if (authUser.Identity.IsAuthenticated && authUser.IsInRole("isCustomer"))
        {
            isCustomer = true;
            orders = await Http.GetFromJsonAsync<List<CustomOrderHistory>>($"Order/GetOrderHistoryForUser/{UserId.ToString()}");
        }
    }

}
