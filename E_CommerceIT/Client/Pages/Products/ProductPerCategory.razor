@page "/{categoryUrl}"

@inject HttpClient Http

@if (products == null)
{
    <h2><em>Loading</em></h2>
}
else
{
    <h3>Products for Selected Search</h3>
    <Virtualize Items="products" Context="item">
        <div class="container-fluid">
            <a id="link"href="/product/@item.ProductId.ToString()">
                <h5 style="margin-top: 2vh;">@item.ProductName</h5>
                <p>@item.ProductDescription</p>
                <img class="img-thumbnail" style="max-height: 20vh; border-radius: 15px;" id="image" src="@item.ProductImage"/>
                <p style="color: teal; font-weight: bold; margin-top: 2vh;">R @item.ProductPrice</p>
            </a>
        </div>
    </Virtualize>
}

<style>
    #link {
        text-decoration: none;
        display: inline-block;
        color: black;
        border: none;
    }
    #image:hover {
        transform: scale(1.1) rotate(5deg);
    }
</style>



@code {

    [Parameter]
    public string CategoryUrl { get; set; }

    private List<Product> products;


    protected override async Task OnParametersSetAsync()
    {
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<Product>>("Product/GetProductPerCategory/" + CategoryUrl.ToString());
    }
}
