@page "/cart"

@inject ICartService CartService

<h3 style="color: teal; margin: 1vh;">Your Shopping Cart</h3>

@if (cartItems == null || cartItems.Count <= 0)
{
    <span style="margin: 1vh;">You have no items in your cart...</span>
}
else
{
    <p style="margin-bottom: 4vh; margin-left: 1vh;">These are the items in your cart...</p>
    <div class="container-fluid">
        <table class="table table-responsive">
            <thead>
                <tr>
                    <td>Product Name:</td>
                    <td>Product Price:</td>
                    <td>Product Image:</td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                <Virtualize Context="items" Items="@cartItems">
                    <tr>
                        <td>@items.ProductName</td>
                        <td>R @items.ProductPrice</td>
                        <td><img class="img-thumbnail" style="max-height: 15vh;" src="@items.ProductImage"/></td>
                        <td>
                            <button class="btn btn-danger btn-sm" @onclick="@(() => DeleteItem(items))">Delete</button>
                        </td>
                    </tr>
                </Virtualize>
            </tbody>
        </table>
    </div>
}


@code {

    List<CartItem> cartItems;

    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }

}
