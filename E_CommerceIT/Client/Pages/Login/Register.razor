@page "/register"

@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager navManager

@using System.Text 

<div class="text-center container-fluid" style="max-width: 60vh;">
    <EditForm Model="newUser" OnValidSubmit="RegisterUser">
        <h3 class="font-weight-light">Register an E-Commerce Account with Us!</h3>
        <div class="form-group">
            <label for="email">First Name:</label>
            <InputText id="email" type="text" @bind-Value="newUser.UserFirstName"  placeholder="..." class="form-control" required />
        </div>
        <div class="form-group">
            <label for="surname">Surname:</label>
            <InputText id="surname" type="text" @bind-Value="newUser.UserLastName"  placeholder="..." class="form-control" required />
        </div>
        <div class="form-group">
            <label for="email">Email Address:</label>
            <InputText id="email" type="email" @bind-Value="newUser.UserEmail"  placeholder="..." class="form-control" required />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="=password" type="password" @bind-Value="Password"  placeholder="..." class="form-control" required />
        </div>
        <button class="btn btn-primary rounded-pill text-center" style="width: 150px;" type="submit">Register Account</button>
    </EditForm>
</div>


@code {
    private Users newUser = new();
    public string Password { get; set; }

    private async Task RegisterUser()
    {
        byte[] barr = Encoding.ASCII.GetBytes(Password);
        newUser.UserPassword = barr;
        await Http.PostAsJsonAsync("User/RegisterUser", newUser);

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        navManager.NavigateTo("/", true);
    }
}
