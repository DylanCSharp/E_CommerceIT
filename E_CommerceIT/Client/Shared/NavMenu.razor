@inject HttpClient Http

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="" style="color: black;"><img class="img-fluid" style="height: 2.3rem; padding-left: 3vh;" src="/images/icone.png" />-<img class="img-fluid" style="height: 2.3rem;" src="/images/logo2.png" />ommerce</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="allproducts" Match="NavLinkMatch.All">
                <span class="oi oi-box" aria-hidden="true"></span> All Products
            </NavLink>
        </li>
        @if (categories == null)
        {

        }
        else
        {
            @foreach (var item in categories)
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@item.CategoryUrl" Match="NavLinkMatch.All">
                        <span class="oi oi-@item.CategoryIcon" aria-hidden="true"></span> @item.CategoryType
                    </NavLink>
                </li>
            }
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Login" Match="NavLinkMatch.All">
                <span class="oi oi-lock-unlocked" aria-hidden="true"></span> Login
            </NavLink>
        </li>
    </ul>
</div>

@code {

    private bool collapseNavMenu = true;
    private List<Category> categories;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        categories = await Http.GetFromJsonAsync<List<Category>>("General/GetCategories");
    }
}
